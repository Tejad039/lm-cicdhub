---
####################################################################################
# General System Variables
####################################################################################

# Set the hostname of the target machine
hostname: "cicdhub"

####################################################################################
# Docker
####################################################################################

## Disable to prevent installation of Docker
docker: True

####################################################################################
# Kubernetes
####################################################################################

## Disable to prevent installation of Kubeadm
install_kubeadm: True

# In a multi network interface server you can specify which ip address to bind kubeadm to, otherwise comment this variable out
# and the default IP address discovered by Ansible will be used
# Set this to the IP you expect to use to access open ports on the target machine.
#kubeadm_advertise_address: 192.168.56.100

# With a vagrant environment the first network interface is used by Vagrant. The network interface to bind kubeadm to must be specified here, e.g. eth1.
# Change this variable to the main network interface or comment out and Ansible will use the default interface name.
# If you have set `kubeadm_advertise_address` then the recommended way determine the correct flannel_interface is to
# run `ifconfig` on the target machine, find the entry with the address you used on `kubeadm_advertise_address`, enter the name of that entry here.
#flannel_interface: "eth1"

# Set to 'yes' or 'True' to install the K8s Dashboard with Kubeadm
kube_dashboard: True

## Disable to prevent installation of Helm
helm: True

## List of Helm repositories to add
#helm_repos:
#  - name: repo-name
#    url: repo-addr

k8s_namespace: default

####################################################################################
# CICDHub
####################################################################################

## Disable to prevent installation of CICDHub components
cicdhub: True

##################################
# CICDHub - Helm Chart
##################################

cicdhub_chart_strategy: from_chart_src
cicdhub_chart_package: ../helm/cicdhub

## Path to a helm values file to be included on the install of Cicdhub Helm chart
cicdhub_values: cicdhub-helm-values.yml

## When using local volumes we need to create the directories and persistent volumes upfront
## When re-installing the CICDHub, disable only 'cicdhub_init_volumes_directories' to keep the existing directories and there contents.
cicdhub_init_volumes: True
cicdhub_init_volumes_directories: True

cicdhub_ingress_controller_enabled: True
# set this to 32080 to be consistent with kubeadm and to avoid port 80 (which is used by ICP official Ingress Controller)
cicdhub_ingress_controller_port: 32080
cicdhub_ingress_controller_https_port: 32443

# Set CICDHub Openldap password
cicdhub_ldap_manager_password: admin

##################################
# CICDHub - Bootstrap Content
##################################

## Creates popular repository types in Nexus and the repository needed to bootstrap_aio and bootstrap_lm_packages
bootstrap_nexus_repositories: True

## Creates Git projects with the example NS and VNF services
## __PLAY substituted for the playbook directory
bootstrap_git_projects: True
bootstrap_git_project_defs:
  - name: hello-world-service
    content: "__PLAY/../bootstrap-content/example-service-projects/arm/hello-world-service"
    template: True
    template_fileexts: 
      - ".md"
  - name: docker-network
    content: "__PLAY/../bootstrap-content/example-service-projects/arm/docker-network"
    template: True
    template_fileexts: 
      - ".md"
  - name: ip-pbx
    content: "__PLAY/../bootstrap-content/example-service-projects/arm/ip-pbx"
    template: True
    template_fileexts: 
      - ".md"
  - name: sip-performance
    content: "__PLAY/../bootstrap-content/example-service-projects/arm/sip-performance"
    template: True
    template_fileexts: 
      - ".md"
  - name: getting-started
    content: "__PLAY/../bootstrap-content/cicdhub-docs"
    template: True
    template_fileexts: 
      - ".md"
bootstrap_git_username: cicdhub-admin
bootstrap_git_password: cicdhub-admin
bootstrap_git_email: admin@example.com

## Pushes an AIO config file to Nexus, that may be used on an AIO to pull the necessary packages from the this CICDHub
# LM packages only included if bootstrap_lm_packages is set to True
bootstrap_aio: True
bootstrap_aio_path: ../bootstrap-content/aio/aio-variables.yml

## Configures a Jenkins jnlp slave with lmctl installed
bootstrap_jenkins_lmctl_slave: True
bootstrap_jenkins_lmctl_version: 2.0.4
# Path to an Lmctl config file for the target LM environment to be used by the slave
bootstrap_jenkins_lmctl_config_file: ./jenkins-slave-lmctl-config.yaml

## Pushes the LM Helm Charts package to Nexus and Docker Images to the Docker Registry
## This makes them available for the All-in-one
bootstrap_lm_packages: False
bootstrap_lm_docker_source_path: ../bootstrap-content/lm-artifacts/lm-docker-source-<LM_VERSION>-dist.tgz
bootstrap_lm_helm_charts_path: ../bootstrap-content/lm-artifacts/lm-helm-charts-<LM_VERSION>-dist.tgz

####################################################################################
# External Lifecycle Manager
####################################################################################

## "lm_address" is the IP address of an ALM reverse proxy to allow CICDHub (Jenkins) to connect to a running ALM
## Set to the IP address of ALM reverse proxy, defaults to 'kubeadm_advertise_address' or the IP address chosen by Ansible if 'kubeadm_advertise_address' is not explicitly set.
#lm_address: 192.168.99.100

## Set to true if the ALM that CICDHub connects to is secure
lm_secure: True

## ALM Username and password you would use to log in the UI if lm_secure == True
lm_username: jack
lm_password: jack

####################################################################################
# OSS Ansible RM
####################################################################################

## True if OSS Ansible RM is running with https enabled, false otherwise
arm_secure: True

## IP address of OSS Ansible RM, defaults to ip_address (set this if OSSLM Ansible RM is not running in the same environment as ALM)
#arm_addr_ip: 192.168.99.100

## These are the OSS Ansible RM (node)ports
## Override these if different from the defaults below.
arm_api_non_ssl_port: 31080
arm_api_ssl_port: 31081

## OSS Ansible RM URIs
## Override these to allow ALM to access OSSLM Ansible RM if it is not running in the same environment as ALM.
arm_https_uri: https://osslm-ansible-rm:8443
arm_http_uri: http://osslm-ansible-rm:8080
#arm_https_uri: https://192.168.99.100:31081
#arm_http_uri: http://192.168.99.100:31080

