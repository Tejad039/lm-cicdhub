## Global settings 
global:
  ldap:
    ## LDAP's manager password
    managerPassword: admin
    ## LDAP's domain
    domain: lm.com

## Helper to create Persistence Volumes based for the foundation services with persistence.enabled
## The volumes will created using the hostPath type (https://kubernetes.io/docs/concepts/storage/volumes/#hostpath)
## meaning they will mount local volumes on the host
## Therefore, they should only be used in single node Kubernetes deployments for testing purposes 
## Each volume will be tailored towards the size requirements, specified by the values, of each foundation service requiring persistence
## E.g. a volume will be created with size equal to the cassandra.persistence.size value
## When enabling this value you must configure the storageClass for each service to values shown in a comment above field in this file
volumesInit:
  enabled: false
  ## The directory on the host where volumes will be created. It is important that the user running kubernetes has read/write access to this directory
  hostPath: /var/cicdhub

nexus:
  enabled: true
  replicaCount: 1
  statefulset:
    enabled: true
  persistence:
    enabled: true
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: nexus-storage if using local volumes created by volumesInit
    #storageClass: 
    storageSize: 100Gi
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      # allow request payloads of any size
      nginx.ingress.kubernetes.io/proxy-body-size: 0
    tls:
      enabled: false
  nexusProxy:
    enabled: false
  nodePort: 32739

gogs:
  enabled: true
  service:
    httpNodePort: 32734
    gogs:
      serviceEnableCaptcha: false
      repositoryUploadMaxFileSize: 10000
    ingress:
      enabled: true
      hosts:
      - git.cicdhub
      annotations:
        # allow request payloads of any size
        nginx.ingress.kubernetes.io/proxy-body-size: 0
  persistence:
    enabled: true
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: gogs-storage if using local volumes created by volumesInit
    #storageClass: 
    size: 1Gi
  postgresql:
    enabled: true
    install: true
    postgresUser: admin
    postgresPassword: admin
    persistence:
      enabled: true
      ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
      ## Use storageClass: postgresql-storage if using local volumes created by volumesInit
      #storageClass: 
      accessModes:
      - ReadWriteOnce
      size: 5Gi

jenkins:
  enabled: true
  master:
    imageTag: 2.182
    serviceType: NodePort
    nodePort: 32732
    ingress:
      enabled: true
      hostName: jenkins.cicdhub
    adminUser: admin
    adminPassword: admin
    numExecutors: 2
    cli: true
  persistence:
    enabled: true
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: jenkins-storage if using local volumes created by volumesInit
    #storageClass:
    size: 1Gi

## Openldap is an optional dependency for LM. An LDAP server is required when security is enabled, for user management. 
## Openldap is the out-of-the-box recommendation. 
## Full documentation for the values allowed in this section can be found at: https://github.com/helm/charts/tree/master/stable/openldap
## Note: remember to locate the version of the Openldap helm chart in use by viewing the requirements.yaml file of helm-foundation      
openldap:
  enabled: true
  replicaCount: 1
  persistence:
    enabled: true
    size: "5Gi"
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: openldap-storage if using local volumes created by volumesInit
    #storageClass:
  existingSecret: openldap-config
  env:
    LDAP_ORGANISATION: "lm"
    LDAP_BACKEND: "lm"
    LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
  ldapPort: 389
  sslLdapPort: 636
  service:
    type: NodePort
    nodePort: 32737
    sslNodePort: 32738

## Recommended container for auto-configuring Openldap with LM defaults. Only used when openldap.enabled
openldapInit:
  enabled: true

## Installs the nginx-ingress controller to enable access to services
nginx-ingress:
  enabled: true
  controller:
    service:
      type: NodePort
      nodePorts:
        http: 32080 
        https: 32443
